plugins {
	// 자바 플러그인 적용
	id 'java'
	// Spring Boot 플러그인 적용 (버전 3.3.2 사용)
	id 'org.springframework.boot' version '3.3.2'
	// Spring의 의존성 관리 플러그인 적용
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.gayou'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		// Java 17 버전을 사용하도록 설정
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	// Maven Central 저장소를 사용하여 의존성 관리
	mavenCentral()
}

dependencies {
	// Spring Boot 웹 스타터 - 기본 웹 애플리케이션 구성 (Tomcat 포함)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// MyBatis Spring Boot 스타터 - MyBatis를 사용한 데이터베이스 연동
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	// 세션 관리 - 분산 환경에서 세션 관리를 지원
	implementation 'org.springframework.session:spring-session-core'

	// Hibernate Validator - 데이터 유효성 검증 라이브러리
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2' // JSR-303 Bean Validation API

	// Spring Data JPA - JPA를 사용한 데이터베이스 연동
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Security - 애플리케이션 보안 설정
    implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT 관련 의존성 - 인증과 권한 부여를 위한 JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 파싱을 위한 Jackson 통합

	// Lombok - 코드 간결화를 위한 라이브러리 (getter, setter, 생성자 자동 생성 등)
	compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

	// MySQL 데이터베이스 드라이버
	runtimeOnly 'com.mysql:mysql-connector-j'

	// H2 내장 데이터베이스 - 테스트 용도로 사용
	runtimeOnly  "com.h2database:h2"

	// Servlet API - 내장 톰캣 서버에서 서블릿 기능을 제공 (Spring Boot 내장 서버 사용 시 필요)
	implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

	// 이메일 전송 기능을 위한 Spring Boot 스타터
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// dotenv 환경 변수 관리 라이브러리 - .env 파일에서 환경 변수를 읽어오는 데 사용
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'

	// 카카오 로그인 처리를 위한 OAuth 2.0 클라이언트
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// 테스트 의존성 - Spring Boot 애플리케이션 테스트를 위한 라이브러리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// MyBatis 통합 테스트를 위한 스타터
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	// JUnit 플랫폼 런처 - 테스트 실행을 위한 런타임 의존성
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	// JUnit 테스트 플랫폼 사용 설정 (현재 비활성화)
	// useJUnitPlatform()
	enabled = false // 테스트 실행 비활성화
}
